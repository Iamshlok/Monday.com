{"ast":null,"code":"var _jsxFileName = \"D:\\\\monday.com\\\\Monday.form\\\\quickstart-react\\\\src\\\\TableCreation.js\";\nimport React, { Component } from 'react';\nimport './TableCreation.css'; //import { fetchUserName } from './Api.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TableCreation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.extractValue = col => {\n      if (!col.value) return '';\n\n      try {\n        const parsedValue = JSON.parse(col.value);\n\n        if (parsedValue) {\n          if (col.type === 'duration') {\n            return parsedValue.ended_at || '';\n          } else if (col.type === 'date') {\n            return parsedValue.date || '';\n          } else if (col.type === 'numeric') {\n            return parsedValue || '';\n          } else if (col.type === 'color') {\n            return parsedValue.index !== undefined ? parsedValue.index : '';\n          } else if (col.type === 'multiple-person') {\n            return Array.isArray(parsedValue.personsAndTeams) ? Promise.all(parsedValue.personsAndTeams.filter(item => item.kind === 'person').map(async item => {\n              const userId = item.id;\n              const response = await fetch(`https://api.monday.com/v2`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk'\n                },\n                body: JSON.stringify({\n                  query: `{\n                          users(ids: ${userId}) {\n                            name\n                          }\n                        }`\n                })\n              });\n\n              if (response.ok) {\n                const data = await response.json();\n                const userName = data.data.users[0].name;\n                return userName;\n              } else {\n                return '';\n              }\n            })).then(userNames => userNames.join(', ')) : '';\n          } else if (col.type === 'board-relation' || col.type === 'lookup' || col.type === 'subtasks') {\n            const linkedPulseIds = parsedValue.linkedPulseIds;\n\n            if (Array.isArray(linkedPulseIds) && linkedPulseIds.length > 0) {\n              const linkedIds = linkedPulseIds.map(link => link.linkedPulseId).join(', ');\n              return linkedIds;\n            } else {\n              return '';\n            }\n          } else if (col.type === 'timerange') {\n            const parsedValue = JSON.parse(col.value);\n\n            if (parsedValue && parsedValue.to && parsedValue.from) {\n              const fromDate = parsedValue.from;\n              const toDate = parsedValue.to;\n              return `From: ${fromDate} To: ${toDate}` || '';\n            }\n          }\n        }\n      } catch (error) {\n        console.error('JSON parsing error:', error);\n        return col.value;\n      }\n\n      return col.value;\n    };\n\n    this.handleCheckboxChange = itemId => {\n      const {\n        selectedItems\n      } = this.state;\n\n      if (selectedItems.has(itemId)) {\n        selectedItems.delete(itemId);\n        this.setState({\n          selectedItems,\n          selectedData: null\n        });\n        this.props.populateForm(null); // Pass null to clear the form\n      } else {\n        selectedItems.add(itemId);\n        const selectedData = this.getSelectedData(itemId);\n        this.setState({\n          selectedItems,\n          selectedData\n        });\n        this.props.populateForm(selectedData); // Pass the selected data to the form\n      }\n    };\n\n    this.populateForm = selectedData => {\n      this.formRef.current.populateForm(selectedData);\n    };\n\n    this.state = {\n      selectedItems: new Set(),\n      selectedData: null\n    };\n  }\n\n  getSelectedData(itemId) {\n    const selectedData = this.props.groupedItems[itemId];\n    return selectedData;\n  }\n\n  render() {\n    const {\n      groupedItems,\n      boardName\n    } = this.props;\n    const {\n      selectedItems\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Board Name: \", boardName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), Object.keys(groupedItems).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(groupedItems).map(groupId => {\n          const group = groupedItems[groupId];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Group: \", group.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"custom-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Item Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this), group.items[0].column_values.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: col.title\n                  }, col.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: group.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      onChange: () => this.handleCheckboxChange(item.id),\n                      checked: selectedItems.has(item.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 27\n                  }, this), item.column_values.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: this.extractValue(col)\n                  }, col.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 29\n                  }, this))]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)]\n          }, groupId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TableCreation;","map":{"version":3,"names":["React","Component","TableCreation","constructor","props","extractValue","col","value","parsedValue","JSON","parse","type","ended_at","date","index","undefined","Array","isArray","personsAndTeams","Promise","all","filter","item","kind","map","userId","id","response","fetch","method","headers","body","stringify","query","ok","data","json","userName","users","name","then","userNames","join","linkedPulseIds","length","linkedIds","link","linkedPulseId","to","from","fromDate","toDate","error","console","handleCheckboxChange","itemId","selectedItems","state","has","delete","setState","selectedData","populateForm","add","getSelectedData","formRef","current","Set","groupedItems","render","boardName","Object","keys","groupId","group","title","items","column_values"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/TableCreation.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './TableCreation.css';\r\n//import { fetchUserName } from './Api.js';\r\n\r\nclass TableCreation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedItems: new Set(),\r\n      selectedData: null,\r\n    };\r\n  }\r\n\r\n  extractValue = (col) => {\r\n    if (!col.value) return '';\r\n\r\n    try {\r\n      const parsedValue = JSON.parse(col.value);\r\n      if (parsedValue) {\r\n        if (col.type === 'duration') {\r\n          return parsedValue.ended_at || '';\r\n        } else if (col.type === 'date') {\r\n          return parsedValue.date || '';\r\n        } else if (col.type === 'numeric') {\r\n          return parsedValue || '';\r\n        } else if (col.type === 'color') {\r\n          return parsedValue.index !== undefined ? parsedValue.index : '';\r\n        }else if (col.type === 'multiple-person') {\r\n          return Array.isArray(parsedValue.personsAndTeams)\r\n            ? Promise.all(\r\n                parsedValue.personsAndTeams\r\n                  .filter((item) => item.kind === 'person')\r\n                  .map(async (item) => {\r\n                    const userId = item.id;\r\n                    const response = await fetch(`https://api.monday.com/v2`, {\r\n                      method: 'POST',\r\n                      headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk',\r\n                      },\r\n                      body: JSON.stringify({\r\n                        query: `{\r\n                          users(ids: ${userId}) {\r\n                            name\r\n                          }\r\n                        }`,\r\n                      }),\r\n                    });\r\n        \r\n                    if (response.ok) {\r\n                      const data = await response.json();\r\n                      const userName = data.data.users[0].name;\r\n                      return userName;\r\n                    } else {\r\n                      return '';\r\n                    }\r\n                  })\r\n              ).then((userNames) => userNames.join(', '))\r\n            : '';\r\n        } else if (col.type === 'board-relation' || col.type === 'lookup' || col.type === 'subtasks') {\r\n          const linkedPulseIds = parsedValue.linkedPulseIds;\r\n          if (Array.isArray(linkedPulseIds) && linkedPulseIds.length > 0) {\r\n            const linkedIds = linkedPulseIds.map((link) => link.linkedPulseId).join(', ');\r\n            return linkedIds;\r\n          } else {\r\n            return '';\r\n          }\r\n        } else if (col.type === 'timerange') {\r\n          const parsedValue = JSON.parse(col.value);\r\n          if (parsedValue && parsedValue.to && parsedValue.from) {\r\n            const fromDate = parsedValue.from;\r\n            const toDate = parsedValue.to;\r\n            return `From: ${fromDate} To: ${toDate}` || '';\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('JSON parsing error:', error);\r\n      return col.value;\r\n    }\r\n\r\n    return col.value;\r\n  };\r\n\r\n\r\n  handleCheckboxChange = (itemId) => {\r\n    const { selectedItems } = this.state;\r\n    if (selectedItems.has(itemId)) {\r\n      selectedItems.delete(itemId);\r\n      this.setState({ selectedItems, selectedData: null });\r\n      this.props.populateForm(null); // Pass null to clear the form\r\n    } else {\r\n      selectedItems.add(itemId);\r\n      const selectedData = this.getSelectedData(itemId);\r\n      this.setState({ selectedItems, selectedData });\r\n      this.props.populateForm(selectedData); // Pass the selected data to the form\r\n    }\r\n  };\r\n\r\n  getSelectedData(itemId) {\r\n    const selectedData = this.props.groupedItems[itemId];\r\n    return selectedData;\r\n  }\r\n\r\n  populateForm = (selectedData) => {\r\n    this.formRef.current.populateForm(selectedData);\r\n  }\r\n\r\n  render() {\r\n    const { groupedItems, boardName } = this.props;\r\n    const { selectedItems } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Board Name: {boardName}</h1>\r\n        {Object.keys(groupedItems).length === 0 ? (\r\n          <p>Loading data...</p>\r\n        ) : (\r\n          <div>\r\n            {Object.keys(groupedItems).map((groupId) => {\r\n              const group = groupedItems[groupId];\r\n              return (\r\n                <div key={groupId}>\r\n                  <h2>Group: {group.title}</h2>\r\n                  <table className=\"custom-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Select</th>\r\n                        <th>Item Name</th>\r\n                        {group.items[0].column_values.map((col) => (\r\n                          <th key={col.id}>{col.title}</th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {group.items.map((item) => (\r\n                        <tr key={item.id}>\r\n                          <td>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              onChange={() => this.handleCheckboxChange(item.id)}\r\n                              checked={selectedItems.has(item.id)}\r\n                            />\r\n                          </td>\r\n                          <td>{item.name}</td>\r\n                          {item.column_values.map((col) => (\r\n                            <td key={col.id}>{this.extractValue(col)}</td>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableCreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}