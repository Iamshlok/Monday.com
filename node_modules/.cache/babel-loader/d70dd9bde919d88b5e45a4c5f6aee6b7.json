{"ast":null,"code":"var _jsxFileName = \"D:\\\\monday.com\\\\Monday.form\\\\quickstart-react\\\\src\\\\TableCreation.js\";\nimport React from 'react';\nimport './TableCreation.css'; // Import the CSS file for styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableCreation = _ref => {\n  let {\n    groupedItems,\n    boardName,\n    workspaceName,\n    populateForm\n  } = _ref;\n\n  const extractValue = col => {\n    if (!col.value) return ''; // Handle null or undefined values\n\n    try {\n      const parsedValue = JSON.parse(col.value);\n\n      if (parsedValue) {// Add your data extraction logic here\n      }\n    } catch (error) {\n      console.error('JSON parsing error:', error);\n      return col.value; // Return the original string value if parsing fails\n    }\n\n    return col.value; // Return the value as is for other data types\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Board Name: \", boardName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), Object.keys(groupedItems).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(groupedItems).map(groupId => {\n        const group = groupedItems[groupId];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Group: \", group.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"custom-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Item Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 23\n                }, this), group.items[0].column_values.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: col.title\n                }, col.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 25\n                }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: group.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onChange: () => populateForm(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 25\n                }, this), item.column_values.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: extractValue(col)\n                }, col.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 27\n                }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => populateForm(item),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 25\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, groupId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableCreation;\nexport default TableCreation;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCreation\");","map":{"version":3,"names":["React","TableCreation","groupedItems","boardName","workspaceName","populateForm","extractValue","col","value","parsedValue","JSON","parse","error","console","Object","keys","length","map","groupId","group","title","items","column_values","id","item","name"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/TableCreation.js"],"sourcesContent":["import React from 'react';\r\nimport './TableCreation.css'; // Import the CSS file for styling\r\n\r\nconst TableCreation = ({ groupedItems, boardName, workspaceName, populateForm }) => {\r\n  const extractValue = (col) => {\r\n    if (!col.value) return ''; // Handle null or undefined values\r\n\r\n    try {\r\n      const parsedValue = JSON.parse(col.value);\r\n      if (parsedValue) {\r\n        // Add your data extraction logic here\r\n      }\r\n    } catch (error) {\r\n      console.error('JSON parsing error:', error);\r\n      return col.value; // Return the original string value if parsing fails\r\n    }\r\n\r\n    return col.value; // Return the value as is for other data types\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Board Name: {boardName}</h1>\r\n      {Object.keys(groupedItems).length === 0 ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        <div>\r\n          {Object.keys(groupedItems).map((groupId) => {\r\n            const group = groupedItems[groupId];\r\n            return (\r\n              <div key={groupId}>\r\n                <h2>Group: {group.title}</h2>\r\n                <table className=\"custom-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Select</th>\r\n                      <th>Item Name</th>\r\n                      {group.items[0].column_values.map((col) => (\r\n                        <th key={col.id}>{col.title}</th>\r\n                      ))}\r\n                      <th>Update</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {group.items.map((item) => (\r\n                      <tr key={item.id}>\r\n                        <td>\r\n                          <input type=\"checkbox\" onChange={() => populateForm(item)} />\r\n                        </td>\r\n                        <td>{item.name}</td>\r\n                        {item.column_values.map((col) => (\r\n                          <td key={col.id}>{extractValue(col)}</td>\r\n                        ))}\r\n                        <td>\r\n                          <button onClick={() => populateForm(item)}>Update</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCreation;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP,C,CAA8B;;;;AAE9B,MAAMC,aAAa,GAAG,QAA8D;EAAA,IAA7D;IAAEC,YAAF;IAAgBC,SAAhB;IAA2BC,aAA3B;IAA0CC;EAA1C,CAA6D;;EAClF,MAAMC,YAAY,GAAIC,GAAD,IAAS;IAC5B,IAAI,CAACA,GAAG,CAACC,KAAT,EAAgB,OAAO,EAAP,CADY,CACD;;IAE3B,IAAI;MACF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACC,KAAf,CAApB;;MACA,IAAIC,WAAJ,EAAiB,CACf;MACD;IACF,CALD,CAKE,OAAOG,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;MACA,OAAOL,GAAG,CAACC,KAAX,CAFc,CAEI;IACnB;;IAED,OAAOD,GAAG,CAACC,KAAX,CAb4B,CAaV;EACnB,CAdD;;EAgBA,oBACE;IAAA,wBACE;MAAA,2BAAiBL,SAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGW,MAAM,CAACC,IAAP,CAAYb,YAAZ,EAA0Bc,MAA1B,KAAqC,CAArC,gBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAGC;MAAA,UACGF,MAAM,CAACC,IAAP,CAAYb,YAAZ,EAA0Be,GAA1B,CAA+BC,OAAD,IAAa;QAC1C,MAAMC,KAAK,GAAGjB,YAAY,CAACgB,OAAD,CAA1B;QACA,oBACE;UAAA,wBACE;YAAA,sBAAYC,KAAK,CAACC,KAAlB;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAO,SAAS,EAAC,cAAjB;YAAA,wBACE;cAAA,uBACE;gBAAA,wBACE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFF,EAGGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeC,aAAf,CAA6BL,GAA7B,CAAkCV,GAAD,iBAChC;kBAAA,UAAkBA,GAAG,CAACa;gBAAtB,GAASb,GAAG,CAACgB,EAAb;kBAAA;kBAAA;kBAAA;gBAAA,QADD,CAHH,eAME;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QANF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAWE;cAAA,UACGJ,KAAK,CAACE,KAAN,CAAYJ,GAAZ,CAAiBO,IAAD,iBACf;gBAAA,wBACE;kBAAA,uBACE;oBAAO,IAAI,EAAC,UAAZ;oBAAuB,QAAQ,EAAE,MAAMnB,YAAY,CAACmB,IAAD;kBAAnD;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAIE;kBAAA,UAAKA,IAAI,CAACC;gBAAV;kBAAA;kBAAA;kBAAA;gBAAA,QAJF,EAKGD,IAAI,CAACF,aAAL,CAAmBL,GAAnB,CAAwBV,GAAD,iBACtB;kBAAA,UAAkBD,YAAY,CAACC,GAAD;gBAA9B,GAASA,GAAG,CAACgB,EAAb;kBAAA;kBAAA;kBAAA;gBAAA,QADD,CALH,eAQE;kBAAA,uBACE;oBAAQ,OAAO,EAAE,MAAMlB,YAAY,CAACmB,IAAD,CAAnC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QARF;cAAA,GAASA,IAAI,CAACD,EAAd;gBAAA;gBAAA;gBAAA;cAAA,QADD;YADH;cAAA;cAAA;cAAA;YAAA,QAXF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAAUL,OAAV;UAAA;UAAA;UAAA;QAAA,QADF;MAiCD,CAnCA;IADH;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+CD,CAhED;;KAAMjB,a;AAkEN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}