{"ast":null,"code":"var _jsxFileName = \"D:\\\\monday.com\\\\Monday.form\\\\quickstart-react\\\\src\\\\TableCreation.js\";\nimport React from 'react';\nimport './TableCreation.css'; // Import the CSS file for styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableCreation = _ref => {\n  let {\n    groupedItems\n  } = _ref;\n\n  const extractValue = col => {\n    if (!col.value) return ''; // Handle null or undefined values\n\n    if (typeof col.value === 'string') {\n      try {\n        const parsedValue = JSON.parse(col.value);\n\n        if (parsedValue.date) {\n          return parsedValue.date;\n        }\n\n        if (parsedValue.resource_costing) {\n          return parsedValue.resource_costing;\n        }\n      } catch (error) {\n        // Handle JSON parsing errors\n        return col.value; // Return the original string value if parsing fails\n      }\n    }\n\n    return col.value; // Return the value as is for other data types\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monday.com Board Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), Object.keys(groupedItems).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(groupedItems).map(groupId => {\n        const group = groupedItems[groupId];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Group: \", group.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"custom-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Item Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this), group.items[0].column_values.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: col.title\n                }, col.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: group.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 25\n                }, this), item.column_values.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: extractValue(col)\n                }, col.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 27\n                }, this))]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, groupId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableCreation;\nexport default TableCreation;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCreation\");","map":{"version":3,"names":["React","TableCreation","groupedItems","extractValue","col","value","parsedValue","JSON","parse","date","resource_costing","error","Object","keys","length","map","groupId","group","title","items","column_values","id","item","name"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/TableCreation.js"],"sourcesContent":["import React from 'react';\r\nimport './TableCreation.css'; // Import the CSS file for styling\r\n\r\nconst TableCreation = ({ groupedItems }) => {\r\n  const extractValue = (col) => {\r\n    if (!col.value) return ''; // Handle null or undefined values\r\n\r\n    if (typeof col.value === 'string') {\r\n      try {\r\n        const parsedValue = JSON.parse(col.value);\r\n        if (parsedValue.date) {\r\n          return parsedValue.date;\r\n        }\r\n        if (parsedValue.resource_costing) {\r\n          return parsedValue.resource_costing;\r\n        }\r\n      } catch (error) {\r\n        // Handle JSON parsing errors\r\n        return col.value; // Return the original string value if parsing fails\r\n      }\r\n    }\r\n\r\n    return col.value; // Return the value as is for other data types\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Monday.com Board Tables</h1>\r\n      {Object.keys(groupedItems).length === 0 ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        <div>\r\n          {Object.keys(groupedItems).map((groupId) => {\r\n            const group = groupedItems[groupId];\r\n            return (\r\n              <div key={groupId}>\r\n                <h2>Group: {group.title}</h2>\r\n                <table className=\"custom-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item Name</th>\r\n                      {group.items[0].column_values.map((col) => (\r\n                        <th key={col.id}>{col.title}</th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {group.items.map((item) => (\r\n                      <tr key={item.id}>\r\n                        <td>{item.name}</td>\r\n                        {item.column_values.map((col) => (\r\n                          <td key={col.id}>{extractValue(col)}</td>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableCreation;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP,C,CAA8B;;;;AAE9B,MAAMC,aAAa,GAAG,QAAsB;EAAA,IAArB;IAAEC;EAAF,CAAqB;;EAC1C,MAAMC,YAAY,GAAIC,GAAD,IAAS;IAC5B,IAAI,CAACA,GAAG,CAACC,KAAT,EAAgB,OAAO,EAAP,CADY,CACD;;IAE3B,IAAI,OAAOD,GAAG,CAACC,KAAX,KAAqB,QAAzB,EAAmC;MACjC,IAAI;QACF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACC,KAAf,CAApB;;QACA,IAAIC,WAAW,CAACG,IAAhB,EAAsB;UACpB,OAAOH,WAAW,CAACG,IAAnB;QACD;;QACD,IAAIH,WAAW,CAACI,gBAAhB,EAAkC;UAChC,OAAOJ,WAAW,CAACI,gBAAnB;QACD;MACF,CARD,CAQE,OAAOC,KAAP,EAAc;QACd;QACA,OAAOP,GAAG,CAACC,KAAX,CAFc,CAEI;MACnB;IACF;;IAED,OAAOD,GAAG,CAACC,KAAX,CAlB4B,CAkBV;EACnB,CAnBD;;EAqBA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGO,MAAM,CAACC,IAAP,CAAYX,YAAZ,EAA0BY,MAA1B,KAAqC,CAArC,gBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAGC;MAAA,UACGF,MAAM,CAACC,IAAP,CAAYX,YAAZ,EAA0Ba,GAA1B,CAA+BC,OAAD,IAAa;QAC1C,MAAMC,KAAK,GAAGf,YAAY,CAACc,OAAD,CAA1B;QACA,oBACE;UAAA,wBACE;YAAA,sBAAYC,KAAK,CAACC,KAAlB;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAO,SAAS,EAAC,cAAjB;YAAA,wBACE;cAAA,uBACE;gBAAA,wBACE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,EAEGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeC,aAAf,CAA6BL,GAA7B,CAAkCX,GAAD,iBAChC;kBAAA,UAAkBA,GAAG,CAACc;gBAAtB,GAASd,GAAG,CAACiB,EAAb;kBAAA;kBAAA;kBAAA;gBAAA,QADD,CAFH;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eASE;cAAA,UACGJ,KAAK,CAACE,KAAN,CAAYJ,GAAZ,CAAiBO,IAAD,iBACf;gBAAA,wBACE;kBAAA,UAAKA,IAAI,CAACC;gBAAV;kBAAA;kBAAA;kBAAA;gBAAA,QADF,EAEGD,IAAI,CAACF,aAAL,CAAmBL,GAAnB,CAAwBX,GAAD,iBACtB;kBAAA,UAAkBD,YAAY,CAACC,GAAD;gBAA9B,GAASA,GAAG,CAACiB,EAAb;kBAAA;kBAAA;kBAAA;gBAAA,QADD,CAFH;cAAA,GAASC,IAAI,CAACD,EAAd;gBAAA;gBAAA;gBAAA;cAAA,QADD;YADH;cAAA;cAAA;cAAA;YAAA,QATF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAAUL,OAAV;UAAA;UAAA;UAAA;QAAA,QADF;MAyBD,CA3BA;IADH;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CA7DD;;KAAMf,a;AA+DN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}