{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _regeneratorRuntime from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectWithoutProperties from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"D:/monday.com/Monday.form/quickstart-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";var _excluded=[\"boardId\",\"groupId\",\"columns\"];import React,{Component}from'react';import'./Form.css';import{fetchColumns,fetchBoardAndGroupId}from'../../API Call/getids';import{createItem}from'../../API Call/mutation';import PopupMessage from'../../Features/PopupMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=/*#__PURE__*/function(_Component){_inherits(Form,_Component);var _super=_createSuper(Form);function Form(props){var _this;_classCallCheck(this,Form);_this=_super.call(this,props);_this.handlePopupClose=function(){_this.setState({showPopup:false,popupMessage:''});};_this.handleBoardRelationChange=function(e,column){var selectedItemId=e.target.value;var selectedBoardItems=_this.state[column.id].items;var selectedItem=selectedBoardItems.find(function(item){return item.id===selectedItemId;});// Log the selectedItem to verify its structure\n// Populate Manager field based on the selected board-relation option\nvar managerValue=selectedItem?selectedItem.manager:'';// Update to 'text' from 'person'\nconsole.log('Selected Item:',managerValue);_this.setState(function(prevState){var _objectSpread2;return _objectSpread(_objectSpread({},prevState),{},(_objectSpread2={},_defineProperty(_objectSpread2,column.id,{selectedItemId:selectedItemId,selectedItem:selectedItem,items:prevState[column.id].items}),_defineProperty(_objectSpread2,\"managerFieldId\",managerValue),_objectSpread2));});};_this.handleCheckboxChange=function(e,column){var checked=e.target.checked;_this.setState(_defineProperty({},column.id,checked));};_this.handleInputChange=function(e,column){var value=e.target.value;_this.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},column.id,value));});};_this.handleHourChange=function(e,column){var value=e.target.value;_this.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},column.id,value));});};_this.handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var mandatoryFields,_this$state,boardId,groupId,columns,values,missingFields,columnValues,newItem;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// Define the list of mandatory fields\nmandatoryFields=[\"Name\",\"Date\",\"Hours Spent\",\"Project\"];_this$state=_this.state,boardId=_this$state.boardId,groupId=_this$state.groupId,columns=_this$state.columns,values=_objectWithoutProperties(_this$state,_excluded);// Check if all mandatory fields are filled\nmissingFields=mandatoryFields.filter(function(field){return!values[field];});if(!(missingFields.length>0)){_context.next=7;break;}// Display error message if any mandatory field is missing\n_this.setState({errorMessage:\"Please fill in the following mandatory fields: \".concat(missingFields.join(\", \")),successMessage:'',showPopup:true,popupMessage:\"Please fill in the following mandatory fields: \".concat(missingFields.join(\", \")),popupType:'error'});return _context.abrupt(\"return\");case 7:// Exclude \"Manager\" column from the submission\ncolumnValues=columns.filter(function(column){return column.title!==\"Manager\";}).map(function(column){return{id:column.id,value:values[column.id],type:column.type};});_context.prev=8;_context.next=11;return createItem(boardId,groupId,columnValues);case 11:newItem=_context.sent;if(newItem){_this.setState({successMessage:'Item created successfully',errorMessage:'',showPopup:true,popupMessage:'Item created successfully',popupType:'success'});_this.resetFormState();setTimeout(function(){_this.setState({successMessage:''});},3000);}else{_this.setState({errorMessage:'Error creating item',successMessage:'',showPopup:true,popupMessage:'Error creating item',popupType:'error'});}_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](8);console.error('Error creating item:',_context.t0);_this.setState({errorMessage:'Error creating item',successMessage:'',showPopup:true,popupMessage:'Error creating item',popupType:'error'});case 19:case\"end\":return _context.stop();}}},_callee,null,[[8,15]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state=_objectSpread({columns:[],boardId:null,groupId:null,successMessage:'',errorMessage:'',showPopup:false,popupMessage:'',popupType:'success',edit:false},props);return _this;}///////////////////////////////////////////App Handlers///////////////////////////////////////\n_createClass(Form,[{key:\"resetFormState\",value:function resetFormState(){var columns=this.state.columns;var initialValues={};columns.forEach(function(column){initialValues[column.id]=null;});this.setState(_objectSpread({successMessage:'',errorMessage:''},initialValues));}},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var columns,_yield$fetchBoardAndG,boardId,groupId,initialValues,boardRelationColumns,_iterator,_step,boardRelationColumn,_JSON$parse,boardIds,boardItems;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetchColumns();case 3:columns=_context2.sent;_context2.next=6;return fetchBoardAndGroupId();case 6:_yield$fetchBoardAndG=_context2.sent;boardId=_yield$fetchBoardAndG.boardId;groupId=_yield$fetchBoardAndG.groupId;initialValues={};boardRelationColumns=columns.filter(function(column){return column.type==='board-relation';});// Fetch and populate data for board-relation columns\n_iterator=_createForOfIteratorHelper(boardRelationColumns);_context2.prev=12;_iterator.s();case 14:if((_step=_iterator.n()).done){_context2.next=23;break;}boardRelationColumn=_step.value;_JSON$parse=JSON.parse(boardRelationColumn.settings_str),boardIds=_JSON$parse.boardIds;_context2.next=19;return this.fetchBoardItems(boardIds[0]);case 19:boardItems=_context2.sent;initialValues[boardRelationColumn.id]={selectedItemId:'',// Initialize selectedItemId\nselectedItem:null,// Initialize selectedItem\nitems:boardItems};case 21:_context2.next=14;break;case 23:_context2.next=28;break;case 25:_context2.prev=25;_context2.t0=_context2[\"catch\"](12);_iterator.e(_context2.t0);case 28:_context2.prev=28;_iterator.f();return _context2.finish(28);case 31:// Initialize other columns\ncolumns.forEach(function(column){if(column.type!=='board-relation'){initialValues[column.id]=null;}});this.setState(_objectSpread({columns:columns,boardId:boardId,groupId:groupId},initialValues));_context2.next=38;break;case 35:_context2.prev=35;_context2.t1=_context2[\"catch\"](0);console.error('Error Fetching data.',_context2.t1);case 38:case\"end\":return _context2.stop();}}},_callee2,this,[[0,35],[12,25,28,31]]);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()/////////////////////////////////////Fetching Projects/////////////////////////////////////\n},{key:\"fetchBoardItems\",value:function(){var _fetchBoardItems=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(boardId){var response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"https://api.monday.com/v2\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk'// Replace with your Monday.com API key\n},body:JSON.stringify({query:\"\\n            query {\\n              boards(ids: \".concat(boardId,\") {\\n                items {\\n                  id\\n                  name\\n                  group {\\n                    id\\n                    title\\n                  }\\n                  column_values {\\n                    id\\n                    title\\n                    text\\n                  }\\n                }\\n              }\\n            }\\n          \")})});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:data=_context3.sent;console.log(data);if(!(data.data&&data.data.boards&&data.data.boards.length>0)){_context3.next=10;break;}return _context3.abrupt(\"return\",data.data.boards[0].items.map(function(item){var managerColumn=item.column_values.find(function(column){return column.title==='Manager';});return{id:item.id,name:item.name,group:item.group,manager:managerColumn?managerColumn.text:''};}).filter(function(item){return item.group.title==='On Going Projects';}));case 10:return _context3.abrupt(\"return\",[]);case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);console.error('Error fetching board items:',_context3.t0);return _context3.abrupt(\"return\",[]);case 17:case\"end\":return _context3.stop();}}},_callee3,null,[[0,13]]);}));function fetchBoardItems(_x2){return _fetchBoardItems.apply(this,arguments);}return fetchBoardItems;}()////////////////////////////////////////////////////Submit Handler////////////////////////////////////////////////////\n},{key:\"render\",value://///////////////////////////////////////App Render/////////////////////////////////////////////\nfunction render(){var _this2=this;var _this$state2=this.state,columns=_this$state2.columns,successMessage=_this$state2.successMessage,errorMessage=_this$state2.errorMessage,showPopup=_this$state2.showPopup,popupMessage=_this$state2.popupMessage,popupType=_this$state2.popupType,edit=_this$state2.edit;// Filter out columns \nvar filteredColumns=columns.filter(function(column){return column.title!==\"Subitems\"&&column.title!==\"Person\";});// Inside the render method\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Time Entry Form\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:filteredColumns.map(function(column,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"form-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:column.title}),column.title===\"Manager\"?/*#__PURE__*/_jsx(\"input\",{type:column.type==='text',name:column.id// Make sure the name attribute matches the column.id\n,value:_this2.state.managerFieldId||''// Use managerFieldId instead of managerFieldName\n,readOnly:true}):column.type==='board-relation'?/*#__PURE__*/_jsxs(\"select\",{name:column.title,value:_this2.state[column.id]?_this2.state[column.id].selectedItemId:'',onChange:function onChange(e){return _this2.handleBoardRelationChange(e,column);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an option\"}),_this2.state[column.id]&&_this2.state[column.id].items.map(function(item){return/*#__PURE__*/_jsx(\"option\",{value:item.id,children:item.name},item.id);})]}):column.type==='color'?/*#__PURE__*/_jsx(\"span\",{children:\"In Approval\"})// <select\n//   name={column.title}\n//   value={this.state[column.id] || ''}\n//   onChange={(e) => this.handleInputChange(e, column)}\n// >\n//   {column.settings_str ? (\n//     Object.keys(JSON.parse(column.settings_str).labels).map((labelKey) => (\n//       <option\n//         key={labelKey}\n//         value={labelKey}  \n//       >\n//         {JSON.parse(column.settings_str).labels[labelKey]}\n//       </option>\n//     ))\n//   ) : null}\n// </select>\n:column.type==='hour'?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",name:column.title,value:_this2.state[column.id]||''// Set the checked attribute based on the state\n,onChange:function onChange(e){return _this2.handleHourChange(e,column);}})}):column.type==='boolean'?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:column.title,checked:_this2.state[column.id]||false// Set the checked attribute based on the state\n,onChange:function onChange(e){return _this2.handleCheckboxChange(e,column);}})}):/*#__PURE__*/_jsx(\"input\",{type:column.type==='color'?'text':column.type,name:column.title,value:_this2.state[column.id]||'',onChange:function onChange(e){return _this2.handleInputChange(e,column);}})]},column.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-submit\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})})]}),successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:successMessage}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errorMessage}),showPopup&&/*#__PURE__*/_jsx(PopupMessage,{message:popupMessage,type:popupType,onClose:this.handlePopupClose})]});}}]);return Form;}(Component);export default Form;","map":{"version":3,"names":["React","Component","fetchColumns","fetchBoardAndGroupId","createItem","PopupMessage","Form","props","handlePopupClose","setState","showPopup","popupMessage","handleBoardRelationChange","e","column","selectedItemId","target","value","selectedBoardItems","state","id","items","selectedItem","find","item","managerValue","manager","console","log","prevState","handleCheckboxChange","checked","handleInputChange","handleHourChange","handleSubmit","preventDefault","mandatoryFields","boardId","groupId","columns","values","missingFields","filter","field","length","errorMessage","join","successMessage","popupType","columnValues","title","map","type","newItem","resetFormState","setTimeout","error","edit","initialValues","forEach","boardRelationColumns","boardRelationColumn","JSON","parse","settings_str","boardIds","fetchBoardItems","boardItems","fetch","method","headers","body","stringify","query","response","json","data","boards","managerColumn","column_values","name","group","text","filteredColumns","index","managerFieldId"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/UI Components/Form/Form.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './Form.css';\r\nimport { fetchColumns, fetchBoardAndGroupId } from '../../API Call/getids';\r\nimport { createItem } from '../../API Call/mutation';\r\nimport PopupMessage from '../../Features/PopupMessage';\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [],\r\n      boardId: null,\r\n      groupId: null,\r\n      successMessage: '',\r\n      errorMessage: '',\r\n      showPopup: false,\r\n      popupMessage: '',\r\n      popupType: 'success',\r\n      edit: false, // Set edit to true or false based on your requirement\r\n      ...props,\r\n    };\r\n  }\r\n\r\n  ///////////////////////////////////////////App Handlers///////////////////////////////////////\r\n\r\n  handlePopupClose = () => {\r\n    this.setState({\r\n      showPopup: false,\r\n      popupMessage: '',\r\n    });\r\n  };\r\n\r\n  handleBoardRelationChange = (e, column) => {\r\n    const selectedItemId = e.target.value;\r\n    const selectedBoardItems = this.state[column.id].items;\r\n    const selectedItem = selectedBoardItems.find(item => item.id === selectedItemId);\r\n  \r\n    // Log the selectedItem to verify its structure\r\n    \r\n  \r\n    // Populate Manager field based on the selected board-relation option\r\n    const managerValue = selectedItem ? selectedItem.manager : ''; // Update to 'text' from 'person'\r\n    console.log('Selected Item:', managerValue);\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [column.id]: {\r\n        selectedItemId,\r\n        selectedItem,\r\n        items: prevState[column.id].items,\r\n      },\r\n      // Use a separate update for Manager field\r\n      managerFieldId: managerValue,\r\n    }));\r\n  };\r\n  \r\n\r\n  handleCheckboxChange = (e, column) => {\r\n    const { checked } = e.target;\r\n    this.setState({\r\n      [column.id]: checked,\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e, column) => {\r\n    const { value } = e.target;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [column.id]: value,\r\n    }));\r\n  }\r\n\r\n  resetFormState() {\r\n    const { columns } = this.state;\r\n    const initialValues = {};\r\n    columns.forEach((column) => {\r\n      initialValues[column.id] = null;\r\n    });\r\n\r\n    this.setState({ successMessage: '', errorMessage: '', ...initialValues });\r\n  }\r\n  \r\n  handleHourChange = (e, column) => {\r\n    const { value } = e.target;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [column.id]: value,\r\n    }));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const columns = await fetchColumns();\r\n      const { boardId, groupId } = await fetchBoardAndGroupId();\r\n      const initialValues = {};\r\n      const boardRelationColumns = columns.filter((column) => column.type === 'board-relation');\r\n\r\n      // Fetch and populate data for board-relation columns\r\n      for (const boardRelationColumn of boardRelationColumns) {\r\n        const { boardIds } = JSON.parse(boardRelationColumn.settings_str);\r\n        const boardItems = await this.fetchBoardItems(boardIds[0]);\r\n        initialValues[boardRelationColumn.id] = {\r\n          selectedItemId: '', // Initialize selectedItemId\r\n          selectedItem: null, // Initialize selectedItem\r\n          items: boardItems,\r\n        };\r\n      }\r\n\r\n      // Initialize other columns\r\n      columns.forEach((column) => {\r\n        if (column.type !== 'board-relation') {\r\n          initialValues[column.id] = null;\r\n        }\r\n      });\r\n\r\n      this.setState({ columns, boardId, groupId, ...initialValues });\r\n    } catch (error) {\r\n      console.error('Error Fetching data.', error);\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////Fetching Projects/////////////////////////////////////\r\n  async fetchBoardItems(boardId) {\r\n    try {\r\n      const response = await fetch(`https://api.monday.com/v2`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk', // Replace with your Monday.com API key\r\n        },\r\n        body: JSON.stringify({\r\n          query: `\r\n            query {\r\n              boards(ids: ${boardId}) {\r\n                items {\r\n                  id\r\n                  name\r\n                  group {\r\n                    id\r\n                    title\r\n                  }\r\n                  column_values {\r\n                    id\r\n                    title\r\n                    text\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          `,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      if (data.data && data.data.boards && data.data.boards.length > 0) {\r\n        return data.data.boards[0].items.map(item => {\r\n          const managerColumn = item.column_values.find(column => column.title === 'Manager');\r\n          return {\r\n            id: item.id,\r\n            name: item.name,\r\n            group: item.group,\r\n            manager: managerColumn ? managerColumn.text : '',\r\n          };\r\n        }).filter(item => item.group.title === 'On Going Projects');\r\n      }\r\n\r\n      return [];\r\n    } catch (error) {\r\n      console.error('Error fetching board items:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  ////////////////////////////////////////////////////Submit Handler////////////////////////////////////////////////////\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Define the list of mandatory fields\r\n    const mandatoryFields = [\"Name\", \"Date\", \"Hours Spent\", \"Project\"];\r\n  \r\n    const { boardId, groupId, columns, ...values } = this.state;\r\n  \r\n    // Check if all mandatory fields are filled\r\n    const missingFields = mandatoryFields.filter(field => !values[field]);\r\n  \r\n    if (missingFields.length > 0) {\r\n      // Display error message if any mandatory field is missing\r\n      this.setState({\r\n        errorMessage: `Please fill in the following mandatory fields: ${missingFields.join(\", \")}`,\r\n        successMessage: '',\r\n        showPopup: true,\r\n        popupMessage: `Please fill in the following mandatory fields: ${missingFields.join(\", \")}`,\r\n        popupType: 'error',\r\n      });\r\n      return;\r\n    }\r\n  \r\n    // Exclude \"Manager\" column from the submission\r\n    const columnValues = columns\r\n      .filter(column => column.title !== \"Manager\")\r\n      .map(column => ({\r\n        id: column.id,\r\n        value: values[column.id],\r\n        type: column.type,\r\n      }));\r\n  \r\n    try {\r\n      const newItem = await createItem(boardId, groupId, columnValues);\r\n  \r\n      if (newItem) {\r\n        this.setState({\r\n          successMessage: 'Item created successfully',\r\n          errorMessage: '',\r\n          showPopup: true,\r\n          popupMessage: 'Item created successfully',\r\n          popupType: 'success',\r\n        });\r\n        this.resetFormState();\r\n        setTimeout(() => {\r\n          this.setState({ successMessage: '' });\r\n        }, 3000);\r\n      } else {\r\n        this.setState({\r\n          errorMessage: 'Error creating item',\r\n          successMessage: '',\r\n          showPopup: true,\r\n          popupMessage: 'Error creating item',\r\n          popupType: 'error',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating item:', error);\r\n      this.setState({\r\n        errorMessage: 'Error creating item',\r\n        successMessage: '',\r\n        showPopup: true,\r\n        popupMessage: 'Error creating item',\r\n        popupType: 'error',\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  /////////////////////////////////////////App Render/////////////////////////////////////////////\r\n  render() {\r\n    const { columns, successMessage, errorMessage, showPopup, popupMessage, popupType, edit } = this.state;\r\n\r\n    // Filter out columns \r\n    const filteredColumns = columns.filter(column => column.title !== \"Subitems\" && column.title !== \"Person\");\r\n    // Inside the render method\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h1>Time Entry Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-row\">\r\n            {filteredColumns.map((column, index) => (\r\n              <div key={column.id} className=\"form-input\">\r\n                <label>{column.title}</label>\r\n                {column.title === \"Manager\" ? (\r\n                  <input\r\n                  type={column.type === 'text'}\r\n                  name={column.id}  // Make sure the name attribute matches the column.id\r\n                  value={this.state.managerFieldId || ''}  // Use managerFieldId instead of managerFieldName\r\n                  readOnly\r\n                />\r\n                ) : column.type === 'board-relation' ? (\r\n                  <select\r\n                    name={column.title}\r\n                    value={this.state[column.id] ? this.state[column.id].selectedItemId : ''}\r\n                    onChange={(e) => this.handleBoardRelationChange(e, column)}\r\n                  >\r\n                    <option value=\"\">Select an option</option>\r\n                    {this.state[column.id] && this.state[column.id].items.map((item) => (\r\n                      <option\r\n                        key={item.id}\r\n                        value={item.id}\r\n                      >\r\n                        {item.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                ) : column.type === 'color' ? (\r\n                  <span>In Approval</span>\r\n                  // <select\r\n                  //   name={column.title}\r\n                  //   value={this.state[column.id] || ''}\r\n                  //   onChange={(e) => this.handleInputChange(e, column)}\r\n                  // >\r\n                  //   {column.settings_str ? (\r\n                  //     Object.keys(JSON.parse(column.settings_str).labels).map((labelKey) => (\r\n                  //       <option\r\n                  //         key={labelKey}\r\n                  //         value={labelKey}  \r\n                  //       >\r\n                  //         {JSON.parse(column.settings_str).labels[labelKey]}\r\n                  //       </option>\r\n                  //     ))\r\n                  //   ) : null}\r\n                  // </select>\r\n                ) : column.type === 'hour' ? (\r\n                  <div>\r\n                    <input\r\n                      type=\"time\"\r\n                      name={column.title}\r\n                      value={this.state[column.id] || ''}  // Set the checked attribute based on the state\r\n                      onChange={(e) => this.handleHourChange(e, column)}\r\n                    />\r\n                  </div>\r\n                ) : column.type === 'boolean' ? (\r\n                  <div>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={column.title}\r\n                      checked={this.state[column.id] || false}  // Set the checked attribute based on the state\r\n                      onChange={(e) => this.handleCheckboxChange(e, column)}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <input\r\n                    type={column.type === 'color' ? 'text' : column.type}\r\n                    name={column.title}\r\n                    value={this.state[column.id] || ''}\r\n                    onChange={(e) => this.handleInputChange(e, column)}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"form-submit\">\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </form>\r\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n        {showPopup && (\r\n          <PopupMessage message={popupMessage} type={popupType} onClose={this.handlePopupClose} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}