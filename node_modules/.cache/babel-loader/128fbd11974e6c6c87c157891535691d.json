{"ast":null,"code":"// CalendarEvents.js\nimport moment from 'moment';\n\nconst extractCalendarEvents = groupedItems => {\n  // Extract events from groupedItems and format them for the calendar\n  const events = [];\n  console.log('Grouped Items:', groupedItems);\n\n  for (const groupId in groupedItems) {\n    console.log('Group ID:', groupId);\n\n    if (groupedItems.hasOwnProperty(groupId)) {\n      const group = groupedItems[groupId];\n      console.log('Group:', group);\n      group.items.forEach(item => {\n        console.log('Item:', item); // Extract relevant data and format for events\n\n        const dateValue = item.column_values.find(col => col.title === 'Date').value;\n        const hoursSpentValue = item.column_values.find(col => col.title === 'Hours Spent').value;\n        console.log('Date Value:', dateValue);\n        console.log('Hours Spent Value:', hoursSpentValue);\n\n        if (dateValue && dateValue.date && hoursSpentValue) {\n          const event = {\n            start: moment(dateValue.date).toDate(),\n            // Use only the date part\n            end: moment(dateValue.date).toDate(),\n            // Use only the date part\n            title: `${item.name} - ${hoursSpentValue} hours` // Include Hours Spent in the title\n            // ... other event properties\n\n          };\n          events.push(event);\n        }\n      });\n    }\n  }\n\n  console.log('Extracted Events:', events);\n  return events;\n};\n\nexport default extractCalendarEvents;","map":{"version":3,"names":["moment","extractCalendarEvents","groupedItems","events","console","log","groupId","hasOwnProperty","group","items","forEach","item","dateValue","column_values","find","col","title","value","hoursSpentValue","date","event","start","toDate","end","name","push"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/CalendarEvents.js"],"sourcesContent":["// CalendarEvents.js\r\nimport moment from 'moment';\r\n\r\nconst extractCalendarEvents = (groupedItems) => {\r\n  // Extract events from groupedItems and format them for the calendar\r\n  const events = [];\r\n\r\n  console.log('Grouped Items:', groupedItems);\r\n\r\n  for (const groupId in groupedItems) {\r\n    console.log('Group ID:', groupId);\r\n    \r\n    if (groupedItems.hasOwnProperty(groupId)) {\r\n      const group = groupedItems[groupId];\r\n      \r\n      console.log('Group:', group);\r\n\r\n      group.items.forEach((item) => {\r\n        console.log('Item:', item);\r\n\r\n        // Extract relevant data and format for events\r\n        const dateValue = item.column_values.find(col => col.title === 'Date').value;\r\n        const hoursSpentValue = item.column_values.find(col => col.title === 'Hours Spent').value;\r\n\r\n        console.log('Date Value:', dateValue);\r\n        console.log('Hours Spent Value:', hoursSpentValue);\r\n\r\n        if (dateValue && dateValue.date && hoursSpentValue) {\r\n          const event = {\r\n            start: moment(dateValue.date).toDate(), // Use only the date part\r\n            end: moment(dateValue.date).toDate(), // Use only the date part\r\n            title: `${item.name} - ${hoursSpentValue} hours`, // Include Hours Spent in the title\r\n            // ... other event properties\r\n          };\r\n          events.push(event);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  console.log('Extracted Events:', events);\r\n  return events;\r\n};\r\n\r\nexport default extractCalendarEvents;\r\n"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,qBAAqB,GAAIC,YAAD,IAAkB;EAC9C;EACA,MAAMC,MAAM,GAAG,EAAf;EAEAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,YAA9B;;EAEA,KAAK,MAAMI,OAAX,IAAsBJ,YAAtB,EAAoC;IAClCE,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,OAAzB;;IAEA,IAAIJ,YAAY,CAACK,cAAb,CAA4BD,OAA5B,CAAJ,EAA0C;MACxC,MAAME,KAAK,GAAGN,YAAY,CAACI,OAAD,CAA1B;MAEAF,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,KAAtB;MAEAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAU;QAC5BP,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,IAArB,EAD4B,CAG5B;;QACA,MAAMC,SAAS,GAAGD,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,MAA7C,EAAqDC,KAAvE;QACA,MAAMC,eAAe,GAAGP,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,aAA7C,EAA4DC,KAApF;QAEAb,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BO,SAA3B;QACAR,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCa,eAAlC;;QAEA,IAAIN,SAAS,IAAIA,SAAS,CAACO,IAAvB,IAA+BD,eAAnC,EAAoD;UAClD,MAAME,KAAK,GAAG;YACZC,KAAK,EAAErB,MAAM,CAACY,SAAS,CAACO,IAAX,CAAN,CAAuBG,MAAvB,EADK;YAC4B;YACxCC,GAAG,EAAEvB,MAAM,CAACY,SAAS,CAACO,IAAX,CAAN,CAAuBG,MAAvB,EAFO;YAE0B;YACtCN,KAAK,EAAG,GAAEL,IAAI,CAACa,IAAK,MAAKN,eAAgB,QAH7B,CAGsC;YAClD;;UAJY,CAAd;UAMAf,MAAM,CAACsB,IAAP,CAAYL,KAAZ;QACD;MACF,CAnBD;IAoBD;EACF;;EAEDhB,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,MAAjC;EACA,OAAOA,MAAP;AACD,CAvCD;;AAyCA,eAAeF,qBAAf"},"metadata":{},"sourceType":"module"}