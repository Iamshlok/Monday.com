{"ast":null,"code":"var _jsxFileName = \"D:\\\\monday.com\\\\Monday.form\\\\quickstart-react\\\\src\\\\MyCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\n\nconst MyCalendar = _ref => {\n  _s();\n\n  let {\n    events\n  } = _ref;\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  const CustomAgenda = _ref2 => {\n    let {\n      events,\n      date\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Spent Hour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleEventClick(event),\n          children: event.title\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  };\n\n  const CustomEventPopup = () => {\n    if (!selectedEvent) return null;\n\n    const handleAllDayChange = e => {\n      const updatedEvent = { ...selectedEvent,\n        allDay: e.target.checked\n      };\n      setSelectedEvent(updatedEvent);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedEvent.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"All Day:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEvent.allDay || false,\n            onChange: handleAllDayChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleEventClick = event => {\n    setSelectedEvent(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      defaultView: \"month\",\n      views: ['month', 'week', 'day', 'agenda'],\n      components: {\n        agenda: {\n          body: CustomAgenda\n        }\n      },\n      allDayAccessor: \"isAllDay\",\n      onSelectEvent: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomEventPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyCalendar, \"MOidA8rM8x+W+LvkuraE73ysIFw=\");\n\n_c = MyCalendar;\nexport default MyCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","Calendar","momentLocalizer","moment","localizer","MyCalendar","events","selectedEvent","setSelectedEvent","CustomAgenda","date","map","event","handleEventClick","title","id","CustomEventPopup","handleAllDayChange","e","updatedEvent","allDay","target","checked","agenda","body"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/MyCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MyCalendar = ({ events }) => {\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  const CustomAgenda = ({ events, date }) => {\r\n    return (\r\n      <div>\r\n        <h3>Spent Hour</h3>\r\n        <ul>\r\n          {events.map((event) => (\r\n            <li key={event.id} onClick={() => handleEventClick(event)}>\r\n              {event.title}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CustomEventPopup = () => {\r\n    if (!selectedEvent) return null;\r\n\r\n    const handleAllDayChange = (e) => {\r\n      const updatedEvent = { ...selectedEvent, allDay: e.target.checked };\r\n      setSelectedEvent(updatedEvent);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h3>{selectedEvent.title}</h3>\r\n        <div>\r\n          <label>\r\n            All Day:\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedEvent.allDay || false}\r\n              onChange={handleAllDayChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        {/* Include other event details as needed */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleEventClick = (event) => {\r\n    setSelectedEvent(event);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        defaultView=\"month\"\r\n        views={['month', 'week', 'day', 'agenda']}\r\n        components={{\r\n          agenda: {\r\n            body: CustomAgenda,\r\n          },\r\n        }}\r\n        allDayAccessor=\"isAllDay\"\r\n        onSelectEvent={handleEventClick}\r\n      />\r\n      <CustomEventPopup />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCalendar;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;;AAEA,MAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjC;;AAEA,MAAME,UAAU,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EACjC,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;;EAEA,MAAMS,YAAY,GAAG,SAAsB;IAAA,IAArB;MAAEH,MAAF;MAAUI;IAAV,CAAqB;IACzC,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGJ,MAAM,CAACK,GAAP,CAAYC,KAAD,iBACV;UAAmB,OAAO,EAAE,MAAMC,gBAAgB,CAACD,KAAD,CAAlD;UAAA,UACGA,KAAK,CAACE;QADT,GAASF,KAAK,CAACG,EAAf;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD,CAbD;;EAeA,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,IAAI,CAACT,aAAL,EAAoB,OAAO,IAAP;;IAEpB,MAAMU,kBAAkB,GAAIC,CAAD,IAAO;MAChC,MAAMC,YAAY,GAAG,EAAE,GAAGZ,aAAL;QAAoBa,MAAM,EAAEF,CAAC,CAACG,MAAF,CAASC;MAArC,CAArB;MACAd,gBAAgB,CAACW,YAAD,CAAhB;IACD,CAHD;;IAKA,oBACE;MAAA,wBACE;QAAA,UAAKZ,aAAa,CAACO;MAAnB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uBACE;UAAA,oCAEE;YACE,IAAI,EAAC,UADP;YAEE,OAAO,EAAEP,aAAa,CAACa,MAAd,IAAwB,KAFnC;YAGE,QAAQ,EAAEH;UAHZ;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAgBD,CAxBD;;EA0BA,MAAMJ,gBAAgB,GAAID,KAAD,IAAW;IAClCJ,gBAAgB,CAACI,KAAD,CAAhB;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,QAAD;MACE,SAAS,EAAER,SADb;MAEE,MAAM,EAAEE,MAFV;MAGE,aAAa,EAAC,OAHhB;MAIE,WAAW,EAAC,KAJd;MAKE,WAAW,EAAC,OALd;MAME,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,EAAyB,QAAzB,CANT;MAOE,UAAU,EAAE;QACViB,MAAM,EAAE;UACNC,IAAI,EAAEf;QADA;MADE,CAPd;MAYE,cAAc,EAAC,UAZjB;MAaE,aAAa,EAAEI;IAbjB;MAAA;MAAA;MAAA;IAAA,QADF,eAgBE,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CApED;;GAAMR,U;;KAAAA,U;AAsEN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}