{"ast":null,"code":"var _jsxFileName = \"D:\\\\monday.com\\\\Monday.form\\\\quickstart-react\\\\src\\\\TableCreation.js\";\nimport React, { Component } from 'react';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TableCreation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = itemId => {\n      this.setState(prevState => {\n        const selectedRows = { ...prevState.selectedRows\n        };\n        selectedRows[itemId] = !selectedRows[itemId];\n        return {\n          selectedRows\n        };\n      });\n    };\n\n    this.handleSelectAll = () => {\n      this.setState(prevState => {\n        const selectedRows = {}; // If some rows are unselected, select them all; otherwise, deselect all\n\n        for (const item of this.props.group.items) {\n          selectedRows[item.id] = !prevState.selectAll;\n        }\n\n        return {\n          selectedRows,\n          selectAll: !prevState.selectAll\n        };\n      });\n    };\n\n    this.state = {\n      selectedRows: {} // Store selected rows by their item IDs\n\n    };\n  }\n\n  render() {\n    const {\n      group,\n      updateRows\n    } = this.props;\n    const {\n      selectedRows,\n      selectAll\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Group: \", group.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"custom-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Item Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), group.items[0].column_values.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col.title\n            }, col.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: group.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), item.column_values.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: extractValue(col)\n            }, col.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => this.handleCheckboxChange(item.id),\n                checked: selectedRows[item.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: this.handleSelectAll,\n          checked: selectAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateRows(selectedRows),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TableCreation;","map":{"version":3,"names":["React","Component","TableCreation","constructor","props","handleCheckboxChange","itemId","setState","prevState","selectedRows","handleSelectAll","item","group","items","id","selectAll","state","render","updateRows","title","column_values","map","col","name","extractValue"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/TableCreation.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './Form.css';\r\n\r\nclass TableCreation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedRows: {}, // Store selected rows by their item IDs\r\n    };\r\n  }\r\n\r\n  handleCheckboxChange = (itemId) => {\r\n    this.setState((prevState) => {\r\n      const selectedRows = { ...prevState.selectedRows };\r\n      selectedRows[itemId] = !selectedRows[itemId];\r\n      return { selectedRows };\r\n    });\r\n  };\r\n\r\n  handleSelectAll = () => {\r\n    this.setState((prevState) => {\r\n      const selectedRows = {};\r\n      // If some rows are unselected, select them all; otherwise, deselect all\r\n      for (const item of this.props.group.items) {\r\n        selectedRows[item.id] = !prevState.selectAll;\r\n      }\r\n      return { selectedRows, selectAll: !prevState.selectAll };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { group, updateRows } = this.props;\r\n    const { selectedRows, selectAll } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Group: {group.title}</h2>\r\n        <table className=\"custom-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Item Name</th>\r\n              {group.items[0].column_values.map((col) => (\r\n                <th key={col.id}>{col.title}</th>\r\n              ))}\r\n              <th>Select</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {group.items.map((item) => (\r\n              <tr key={item.id}>\r\n                <td>{item.name}</td>\r\n                {item.column_values.map((col) => (\r\n                  <td key={col.id}>{extractValue(col)}</td>\r\n                ))}\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={() => this.handleCheckboxChange(item.id)}\r\n                    checked={selectedRows[item.id]}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.handleSelectAll}\r\n            checked={selectAll}\r\n          />\r\n          <label>Select All</label>\r\n          <button onClick={() => updateRows(selectedRows)}>Update</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableCreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}