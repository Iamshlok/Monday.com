{"ast":null,"code":"let columnsData = null; // Variable to store the fetched columns\n\nexport async function fetchColumns() {\n  if (columnsData === null) {\n    // Fetch columns only if they haven't been fetched yet\n    const query = '{boards(ids: 5389406007) {name workspace {id name} columns {id title type settings_str}}}';\n    const response = await fetch(\"https://api.monday.com/v2\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk' // Replace with your API key\n\n      },\n      body: JSON.stringify({\n        'query': query\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n\n    const data = await response.json();\n    const responseData = data.data;\n    const boards = responseData.boards;\n\n    if (boards.length > 0) {\n      columnsData = boards[0].columns;\n    } else {\n      columnsData = [];\n    }\n  }\n\n  return columnsData;\n}\nexport async function fetchBoardAndGroupId() {\n  // Make an API call to fetch the boardId and groupId from Monday.com\n  // Replace the following lines with your actual API call\n  const boardId = 1234567890; // Replace with the actual boardId\n\n  const groupId = \"topics\"; // Replace with the actual groupId\n\n  return {\n    boardId,\n    groupId\n  };\n}","map":{"version":3,"names":["columnsData","fetchColumns","query","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","responseData","boards","length","columns","fetchBoardAndGroupId","boardId","groupId"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/getids.js"],"sourcesContent":["let columnsData = null; // Variable to store the fetched columns\r\n\r\nexport async function fetchColumns() {\r\n  if (columnsData === null) {\r\n    // Fetch columns only if they haven't been fetched yet\r\n    const query = '{boards(ids: 5389406007) {name workspace {id name} columns {id title type settings_str}}}';\r\n\r\n    const response = await fetch(\"https://api.monday.com/v2\", {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk' // Replace with your API key\r\n      },\r\n      body: JSON.stringify({\r\n        'query': query\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch data');\r\n    }\r\n\r\n    const data = await response.json();\r\n    const responseData = data.data;\r\n    const boards = responseData.boards;\r\n    if (boards.length > 0) {\r\n      columnsData = boards[0].columns;\r\n    } else {\r\n      columnsData = [];\r\n    }\r\n  }\r\n\r\n  return columnsData;\r\n}\r\n\r\nexport async function fetchBoardAndGroupId() {\r\n    // Make an API call to fetch the boardId and groupId from Monday.com\r\n    // Replace the following lines with your actual API call\r\n    const boardId = 1234567890; // Replace with the actual boardId\r\n    const groupId = \"topics\"; // Replace with the actual groupId\r\n  \r\n    return { boardId, groupId };\r\n  }"],"mappings":"AAAA,IAAIA,WAAW,GAAG,IAAlB,C,CAAwB;;AAExB,OAAO,eAAeC,YAAf,GAA8B;EACnC,IAAID,WAAW,KAAK,IAApB,EAA0B;IACxB;IACA,MAAME,KAAK,GAAG,2FAAd;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;MACxDC,MAAM,EAAE,MADgD;MAExDC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB,qOAFV,CAEgP;;MAFhP,CAF+C;MAMxDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnB,SAASP;MADU,CAAf;IANkD,CAA9B,CAA5B;;IAWA,IAAI,CAACC,QAAQ,CAACO,EAAd,EAAkB;MAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;IACD;;IAED,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;IACA,MAAMC,YAAY,GAAGF,IAAI,CAACA,IAA1B;IACA,MAAMG,MAAM,GAAGD,YAAY,CAACC,MAA5B;;IACA,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;MACrBhB,WAAW,GAAGe,MAAM,CAAC,CAAD,CAAN,CAAUE,OAAxB;IACD,CAFD,MAEO;MACLjB,WAAW,GAAG,EAAd;IACD;EACF;;EAED,OAAOA,WAAP;AACD;AAED,OAAO,eAAekB,oBAAf,GAAsC;EACzC;EACA;EACA,MAAMC,OAAO,GAAG,UAAhB,CAHyC,CAGb;;EAC5B,MAAMC,OAAO,GAAG,QAAhB,CAJyC,CAIf;;EAE1B,OAAO;IAAED,OAAF;IAAWC;EAAX,CAAP;AACD"},"metadata":{},"sourceType":"module"}