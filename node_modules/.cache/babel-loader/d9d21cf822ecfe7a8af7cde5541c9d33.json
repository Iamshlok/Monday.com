{"ast":null,"code":"// Your app details\nconst clientId = \"d9f7723980443d9e6d6dc9d49836c1cc\";\nconst redirectUri = \"http://localhost:8301/\"; // Step 1: Redirect the user to Monday.com for authorization\n\nconst authorizeUrl = `https://auth.monday.com/oauth2/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code`;\nwindow.location.href = authorizeUrl; // Step 2: After user grants permission, Monday.com will redirect back to your specified redirect URI with an authorization code\n// Step 3: Exchange the authorization code for an access token\n// Extract the authorization code from the URL\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst authorizationCode = urlParams.get(\"code\"); // Make a request to exchange the authorization code for an access token\n\nfetch(\"https://auth.monday.com/oauth2/token\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  },\n  body: new URLSearchParams({\n    client_id: clientId,\n    client_secret: \"cf250cd44c9d904802289bc656eba713\",\n    code: authorizationCode,\n    redirect_uri: redirectUri,\n    grant_type: \"authorization_code\"\n  })\n}).then(response => response.json()).then(data => {\n  // Handle the response data\n  const accessToken = data.access_token; // Use the access token to make API requests, like getting the current user's information\n\n  const mondayAPIEndpoint = \"https://api.monday.com/v2\";\n  return fetch(`${mondayAPIEndpoint}/me`, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}).then(response => response.json()).then(userData => {\n  // Handle the user data\n  console.log(\"Current User Information:\", userData);\n}).catch(error => {\n  console.error(\"Error:\", error);\n});","map":{"version":3,"names":["clientId","redirectUri","authorizeUrl","window","location","href","urlParams","URLSearchParams","search","authorizationCode","get","fetch","method","headers","body","client_id","client_secret","code","redirect_uri","grant_type","then","response","json","data","accessToken","access_token","mondayAPIEndpoint","Authorization","userData","console","log","catch","error"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/LoginForm.js"],"sourcesContent":["// Your app details\r\nconst clientId = \"d9f7723980443d9e6d6dc9d49836c1cc\";\r\nconst redirectUri = \"http://localhost:8301/\";\r\n\r\n// Step 1: Redirect the user to Monday.com for authorization\r\nconst authorizeUrl = `https://auth.monday.com/oauth2/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code`;\r\nwindow.location.href = authorizeUrl;\r\n\r\n// Step 2: After user grants permission, Monday.com will redirect back to your specified redirect URI with an authorization code\r\n\r\n// Step 3: Exchange the authorization code for an access token\r\n// Extract the authorization code from the URL\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst authorizationCode = urlParams.get(\"code\");\r\n\r\n// Make a request to exchange the authorization code for an access token\r\nfetch(\"https://auth.monday.com/oauth2/token\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n  },\r\n  body: new URLSearchParams({\r\n    client_id: clientId,\r\n    client_secret: \"cf250cd44c9d904802289bc656eba713\",\r\n    code: authorizationCode,\r\n    redirect_uri: redirectUri,\r\n    grant_type: \"authorization_code\",\r\n  }),\r\n})\r\n  .then((response) => response.json())\r\n  .then((data) => {\r\n    // Handle the response data\r\n    const accessToken = data.access_token;\r\n    \r\n    // Use the access token to make API requests, like getting the current user's information\r\n    const mondayAPIEndpoint = \"https://api.monday.com/v2\";\r\n    return fetch(`${mondayAPIEndpoint}/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  })\r\n  .then((response) => response.json())\r\n  .then((userData) => {\r\n    // Handle the user data\r\n    console.log(\"Current User Information:\", userData);\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"Error:\", error);\r\n  });"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,wBAApB,C,CAEA;;AACA,MAAMC,YAAY,GAAI,sDAAqDF,QAAS,iBAAgBC,WAAY,qBAAhH;AACAE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBH,YAAvB,C,CAEA;AAEA;AACA;;AACA,MAAMI,SAAS,GAAG,IAAIC,eAAJ,CAAoBJ,MAAM,CAACC,QAAP,CAAgBI,MAApC,CAAlB;AACA,MAAMC,iBAAiB,GAAGH,SAAS,CAACI,GAAV,CAAc,MAAd,CAA1B,C,CAEA;;AACAC,KAAK,CAAC,sCAAD,EAAyC;EAC5CC,MAAM,EAAE,MADoC;EAE5CC,OAAO,EAAE;IACP,gBAAgB;EADT,CAFmC;EAK5CC,IAAI,EAAE,IAAIP,eAAJ,CAAoB;IACxBQ,SAAS,EAAEf,QADa;IAExBgB,aAAa,EAAE,kCAFS;IAGxBC,IAAI,EAAER,iBAHkB;IAIxBS,YAAY,EAAEjB,WAJU;IAKxBkB,UAAU,EAAE;EALY,CAApB;AALsC,CAAzC,CAAL,CAaGC,IAbH,CAaSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAbtB,EAcGF,IAdH,CAcSG,IAAD,IAAU;EACd;EACA,MAAMC,WAAW,GAAGD,IAAI,CAACE,YAAzB,CAFc,CAId;;EACA,MAAMC,iBAAiB,GAAG,2BAA1B;EACA,OAAOf,KAAK,CAAE,GAAEe,iBAAkB,KAAtB,EAA4B;IACtCd,MAAM,EAAE,KAD8B;IAEtCC,OAAO,EAAE;MACPc,aAAa,EAAG,UAASH,WAAY,EAD9B;MAEP,gBAAgB;IAFT;EAF6B,CAA5B,CAAZ;AAOD,CA3BH,EA4BGJ,IA5BH,CA4BSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EA5BtB,EA6BGF,IA7BH,CA6BSQ,QAAD,IAAc;EAClB;EACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,QAAzC;AACD,CAhCH,EAiCGG,KAjCH,CAiCUC,KAAD,IAAW;EAChBH,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,CAnCH"},"metadata":{},"sourceType":"module"}