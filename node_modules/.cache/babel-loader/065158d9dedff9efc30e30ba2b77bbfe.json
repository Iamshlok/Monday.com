{"ast":null,"code":"import moment from 'moment';\n\nconst extractCalendarEvents = groupedItems => {\n  // Extract events from groupedItems and format them for the calendar\n  const events = [];\n\n  for (const groupId in groupedItems) {\n    const group = groupedItems[groupId];\n    group.items.forEach(item => {\n      // Extract relevant data and format for events\n      const dateValue = item.column_values.find(col => col.title === 'Date').text;\n      const hoursSpentValue = item.column_values.find(col => col.title === 'Hours Spent').text;\n\n      if (dateValue && hoursSpentValue) {\n        const event = {\n          start: moment(dateValue).toDate(),\n          // Corrected to use dateValue directly\n          end: moment(dateValue).add(24, 'hour').toDate(),\n          title: `${hoursSpentValue} hours` // Display only the hours spent\n          // ... other event properties\n\n        };\n        events.push(event);\n      }\n    });\n  }\n\n  return events;\n};\n\nexport default extractCalendarEvents;","map":{"version":3,"names":["moment","extractCalendarEvents","groupedItems","events","groupId","group","items","forEach","item","dateValue","column_values","find","col","title","text","hoursSpentValue","event","start","toDate","end","add","push"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/CalendarEvents.js"],"sourcesContent":["import moment from 'moment';\r\n\r\nconst extractCalendarEvents = (groupedItems) => {\r\n  // Extract events from groupedItems and format them for the calendar\r\n  const events = [];\r\n\r\n  for (const groupId in groupedItems) {\r\n    const group = groupedItems[groupId];\r\n    group.items.forEach((item) => {\r\n      // Extract relevant data and format for events\r\n      const dateValue = item.column_values.find(col => col.title === 'Date').text;\r\n      const hoursSpentValue = item.column_values.find(col => col.title === 'Hours Spent').text;\r\n\r\n      if (dateValue && hoursSpentValue) {\r\n        const event = {\r\n          start: moment(dateValue).toDate(), // Corrected to use dateValue directly\r\n          end: moment(dateValue).add(24, 'hour').toDate(),\r\n          title: `${hoursSpentValue} hours`, // Display only the hours spent\r\n          // ... other event properties\r\n        };\r\n        events.push(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  return events;\r\n};\r\n\r\nexport default extractCalendarEvents;\r\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,qBAAqB,GAAIC,YAAD,IAAkB;EAC9C;EACA,MAAMC,MAAM,GAAG,EAAf;;EAEA,KAAK,MAAMC,OAAX,IAAsBF,YAAtB,EAAoC;IAClC,MAAMG,KAAK,GAAGH,YAAY,CAACE,OAAD,CAA1B;IACAC,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAU;MAC5B;MACA,MAAMC,SAAS,GAAGD,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,MAA7C,EAAqDC,IAAvE;MACA,MAAMC,eAAe,GAAGP,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,aAA7C,EAA4DC,IAApF;;MAEA,IAAIL,SAAS,IAAIM,eAAjB,EAAkC;QAChC,MAAMC,KAAK,GAAG;UACZC,KAAK,EAAEjB,MAAM,CAACS,SAAD,CAAN,CAAkBS,MAAlB,EADK;UACuB;UACnCC,GAAG,EAAEnB,MAAM,CAACS,SAAD,CAAN,CAAkBW,GAAlB,CAAsB,EAAtB,EAA0B,MAA1B,EAAkCF,MAAlC,EAFO;UAGZL,KAAK,EAAG,GAAEE,eAAgB,QAHd,CAGuB;UACnC;;QAJY,CAAd;QAMAZ,MAAM,CAACkB,IAAP,CAAYL,KAAZ;MACD;IACF,CAdD;EAeD;;EAED,OAAOb,MAAP;AACD,CAxBD;;AA0BA,eAAeF,qBAAf"},"metadata":{},"sourceType":"module"}