{"ast":null,"code":"// CalendarEvents.js\nimport moment from 'moment';\n\nconst extractCalendarEvents = groupedItems => {\n  // Extract events from groupedItems and format them for the calendar\n  const events = [];\n\n  for (const groupId in groupedItems) {\n    const group = groupedItems[groupId];\n    group.items.forEach(item => {\n      // Extract relevant data and format for events\n      const dateValue = item.column_values.find(col => col.title === 'Date').value;\n      const hoursSpentValue = item.column_values.find(col => col.title === 'Hours Spent').value;\n\n      if (dateValue && dateValue.date && hoursSpentValue) {\n        console.log('Date Value:', dateValue.date);\n        console.log('Hours Spent Value:', hoursSpentValue);\n        const event = {\n          start: moment(dateValue.date).toDate(),\n          // Use only the date part\n          end: moment(dateValue.date).toDate(),\n          // Use only the date part\n          title: `${item.name} - ${hoursSpentValue} hours` // Include Hours Spent in the title\n          // ... other event properties\n\n        };\n        events.push(event);\n      }\n    });\n  }\n\n  console.log('Extracted Events:', events);\n  return events;\n};\n\nexport default extractCalendarEvents;","map":{"version":3,"names":["moment","extractCalendarEvents","groupedItems","events","groupId","group","items","forEach","item","dateValue","column_values","find","col","title","value","hoursSpentValue","date","console","log","event","start","toDate","end","name","push"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/CalendarEvents.js"],"sourcesContent":["// CalendarEvents.js\r\nimport moment from 'moment';\r\n\r\nconst extractCalendarEvents = (groupedItems) => {\r\n  // Extract events from groupedItems and format them for the calendar\r\n  const events = [];\r\n\r\n  for (const groupId in groupedItems) {\r\n    const group = groupedItems[groupId];\r\n    group.items.forEach((item) => {\r\n      // Extract relevant data and format for events\r\n      const dateValue = item.column_values.find(col => col.title === 'Date').value;\r\n      const hoursSpentValue = item.column_values.find(col => col.title === 'Hours Spent').value;\r\n\r\n      if (dateValue && dateValue.date && hoursSpentValue) {\r\n        console.log('Date Value:', dateValue.date);\r\n        console.log('Hours Spent Value:', hoursSpentValue);\r\n\r\n        const event = {\r\n          start: moment(dateValue.date).toDate(), // Use only the date part\r\n          end: moment(dateValue.date).toDate(), // Use only the date part\r\n          title: `${item.name} - ${hoursSpentValue} hours`, // Include Hours Spent in the title\r\n          // ... other event properties\r\n        };\r\n        events.push(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  console.log('Extracted Events:', events);\r\n  return events;\r\n};\r\n\r\nexport default extractCalendarEvents;\r\n"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,qBAAqB,GAAIC,YAAD,IAAkB;EAC9C;EACA,MAAMC,MAAM,GAAG,EAAf;;EAEA,KAAK,MAAMC,OAAX,IAAsBF,YAAtB,EAAoC;IAClC,MAAMG,KAAK,GAAGH,YAAY,CAACE,OAAD,CAA1B;IACAC,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAU;MAC5B;MACA,MAAMC,SAAS,GAAGD,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,MAA7C,EAAqDC,KAAvE;MACA,MAAMC,eAAe,GAAGP,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,aAA7C,EAA4DC,KAApF;;MAEA,IAAIL,SAAS,IAAIA,SAAS,CAACO,IAAvB,IAA+BD,eAAnC,EAAoD;QAClDE,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,SAAS,CAACO,IAArC;QACAC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,eAAlC;QAEA,MAAMI,KAAK,GAAG;UACZC,KAAK,EAAEpB,MAAM,CAACS,SAAS,CAACO,IAAX,CAAN,CAAuBK,MAAvB,EADK;UAC4B;UACxCC,GAAG,EAAEtB,MAAM,CAACS,SAAS,CAACO,IAAX,CAAN,CAAuBK,MAAvB,EAFO;UAE0B;UACtCR,KAAK,EAAG,GAAEL,IAAI,CAACe,IAAK,MAAKR,eAAgB,QAH7B,CAGsC;UAClD;;QAJY,CAAd;QAMAZ,MAAM,CAACqB,IAAP,CAAYL,KAAZ;MACD;IACF,CAjBD;EAkBD;;EAEDF,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCf,MAAjC;EACA,OAAOA,MAAP;AACD,CA5BD;;AA8BA,eAAeF,qBAAf"},"metadata":{},"sourceType":"module"}