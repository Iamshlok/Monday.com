{"ast":null,"code":"import React, { Component } from 'react';\n\nclass ApiCall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupedItems: {}\n    };\n  }\n\n  componentDidMount() {\n    // Perform the API call to fetch data from Monday.com\n    fetch(\"https://api.monday.com/v2\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk'\n      },\n      body: JSON.stringify({\n        'query': '{boards (ids:5382001836) {workspace {id name} items{id name group{id title} column_values{id title value type}}}}'\n      })\n    }).then(res => res.json()).then(data => {\n      const boards = data.data.boards;\n      const groupedItems = {};\n      const workspace = boards[0].workspace.name;\n      boards.forEach(board => {\n        board.items.forEach(item => {\n          const groupId = item.group.id;\n\n          if (!groupedItems[groupId]) {\n            groupedItems[groupId] = {\n              title: item.group.title,\n              items: []\n            };\n          }\n\n          groupedItems[groupId].items.push(item);\n        });\n      });\n      this.setState({\n        groupedItems,\n        workspace\n      });\n      console.log(groupedItems);\n    }).catch(error => {\n      console.error('Error fetching data from Monday.com:', error);\n    });\n  }\n\n  render() {\n    return this.props.render(this.state.groupedItems);\n  }\n\n}\n\nexport default ApiCall;","map":{"version":3,"names":["React","Component","ApiCall","constructor","props","state","groupedItems","componentDidMount","fetch","method","headers","body","JSON","stringify","then","res","json","data","boards","workspace","name","forEach","board","items","item","groupId","group","id","title","push","setState","console","log","catch","error","render"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/getValues.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ApiCall extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groupedItems: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Perform the API call to fetch data from Monday.com\r\n    fetch(\"https://api.monday.com/v2\", {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk', \r\n      },\r\n      body: JSON.stringify({\r\n        'query': '{boards (ids:5382001836) {workspace {id name} items{id name group{id title} column_values{id title value type}}}}', \r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const boards = data.data.boards;\r\n        const groupedItems = {};\r\n        const workspace = boards[0].workspace.name;\r\n        boards.forEach((board) => {\r\n          board.items.forEach((item) => {\r\n            const groupId = item.group.id;\r\n            if (!groupedItems[groupId]) {\r\n              groupedItems[groupId] = {\r\n                title: item.group.title,\r\n                items: [],\r\n              };\r\n            }\r\n            groupedItems[groupId].items.push(item);\r\n          });\r\n        });\r\n\r\n        this.setState({ groupedItems, workspace });\r\n        console.log(groupedItems);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data from Monday.com:', error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.props.render(this.state.groupedItems);\r\n  }\r\n}\r\n\r\nexport default ApiCall;\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAC9BE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,YAAY,EAAE;IADH,CAAb;EAGD;;EAEDC,iBAAiB,GAAG;IAClB;IACAC,KAAK,CAAC,2BAAD,EAA8B;MACjCC,MAAM,EAAE,MADyB;MAEjCC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB;MAFV,CAFwB;MAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnB,SAAS;MADU,CAAf;IAN2B,CAA9B,CAAL,CAUGC,IAVH,CAUSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVjB,EAWGF,IAXH,CAWSG,IAAD,IAAU;MACd,MAAMC,MAAM,GAAGD,IAAI,CAACA,IAAL,CAAUC,MAAzB;MACA,MAAMZ,YAAY,GAAG,EAArB;MACA,MAAMa,SAAS,GAAGD,MAAM,CAAC,CAAD,CAAN,CAAUC,SAAV,CAAoBC,IAAtC;MACAF,MAAM,CAACG,OAAP,CAAgBC,KAAD,IAAW;QACxBA,KAAK,CAACC,KAAN,CAAYF,OAAZ,CAAqBG,IAAD,IAAU;UAC5B,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,EAA3B;;UACA,IAAI,CAACrB,YAAY,CAACmB,OAAD,CAAjB,EAA4B;YAC1BnB,YAAY,CAACmB,OAAD,CAAZ,GAAwB;cACtBG,KAAK,EAAEJ,IAAI,CAACE,KAAL,CAAWE,KADI;cAEtBL,KAAK,EAAE;YAFe,CAAxB;UAID;;UACDjB,YAAY,CAACmB,OAAD,CAAZ,CAAsBF,KAAtB,CAA4BM,IAA5B,CAAiCL,IAAjC;QACD,CATD;MAUD,CAXD;MAaA,KAAKM,QAAL,CAAc;QAAExB,YAAF;QAAgBa;MAAhB,CAAd;MACAY,OAAO,CAACC,GAAR,CAAY1B,YAAZ;IACD,CA9BH,EA+BG2B,KA/BH,CA+BUC,KAAD,IAAW;MAChBH,OAAO,CAACG,KAAR,CAAc,sCAAd,EAAsDA,KAAtD;IACD,CAjCH;EAkCD;;EAEDC,MAAM,GAAG;IACP,OAAO,KAAK/B,KAAL,CAAW+B,MAAX,CAAkB,KAAK9B,KAAL,CAAWC,YAA7B,CAAP;EACD;;AAhD6B;;AAmDhC,eAAeJ,OAAf"},"metadata":{},"sourceType":"module"}