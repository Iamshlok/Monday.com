{"ast":null,"code":"// apiQueries.js\nexport async function fetchColumns() {\n  const query = '{boards(ids: 5382001836) {columns {id title type settings_str}}}';\n  const response = await fetch(\"https://api.monday.com/v2\", {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk' // Replace with your API key\n\n    },\n    body: JSON.stringify({\n      'query': query\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to fetch data');\n  }\n\n  const data = await response.json();\n  const responseData = data.data;\n  const boards = responseData.boards;\n\n  if (boards.length > 0) {\n    const columns = boards[0].columns;\n    return columns;\n  } else {\n    return [];\n  }\n}","map":{"version":3,"names":["fetchColumns","query","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","responseData","boards","length","columns"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/getids.js"],"sourcesContent":["// apiQueries.js\r\n\r\nexport async function fetchColumns() {\r\n    const query = '{boards(ids: 5382001836) {columns {id title type settings_str}}}';\r\n  \r\n    const response = await fetch(\"https://api.monday.com/v2\", {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTk3MzkwMCwiYWFpIjoxMSwidWlkIjo1MDc0MDc5NiwiaWFkIjoiMjAyMy0xMC0yNlQxMTozOToxNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTg2ODA3NDQsInJnbiI6InVzZTEifQ.YqNGkoV6ioF5pgYl_F9t32cOSUxaX_ETL_iPmpEjBOk' // Replace with your API key\r\n      },\r\n      body: JSON.stringify({\r\n        'query': query\r\n      })\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch data');\r\n    }\r\n  \r\n    const data = await response.json();\r\n    const responseData = data.data;\r\n    const boards = responseData.boards;\r\n  \r\n    if (boards.length > 0) {\r\n      const columns = boards[0].columns;\r\n      return columns;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n  "],"mappings":"AAAA;AAEA,OAAO,eAAeA,YAAf,GAA8B;EACjC,MAAMC,KAAK,GAAG,kEAAd;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;IACxDC,MAAM,EAAE,MADgD;IAExDC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAiB,qOAFV,CAEgP;;IAFhP,CAF+C;IAMxDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnB,SAASP;IADU,CAAf;EANkD,CAA9B,CAA5B;;EAWA,IAAI,CAACC,QAAQ,CAACO,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;EACD;;EAED,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;EACA,MAAMC,YAAY,GAAGF,IAAI,CAACA,IAA1B;EACA,MAAMG,MAAM,GAAGD,YAAY,CAACC,MAA5B;;EAEA,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;IACrB,MAAMC,OAAO,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAUE,OAA1B;IACA,OAAOA,OAAP;EACD,CAHD,MAGO;IACL,OAAO,EAAP;EACD;AACF"},"metadata":{},"sourceType":"module"}