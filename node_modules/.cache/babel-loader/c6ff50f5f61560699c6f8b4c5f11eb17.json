{"ast":null,"code":"import React from 'react';\nimport moment from 'moment';\n\nconst extractCalendarEvents = (groupedItems, onEventClick) => {\n  const events = [];\n\n  for (const groupId in groupedItems) {\n    const group = groupedItems[groupId];\n    group.items.forEach(item => {\n      const dateValue = item.column_values.find(col => col.title === 'Date').text;\n      const hoursSpentValue = item.column_values.find(col => col.title === 'Hours Spent').text;\n      const startTime = item.column_values.find(col => col.title === 'Start Time').text;\n      const endTime = item.column_values.find(col => col.title === 'End Time').text;\n\n      if (dateValue && hoursSpentValue && startTime && endTime) {\n        const event = {\n          start: moment(`${dateValue} ${startTime}`, 'YYYY-MM-DD hh:mm A').toDate(),\n          end: moment(`${dateValue} ${endTime}`, 'YYYY-MM-DD hh:mm A').toDate(),\n          title: `${hoursSpentValue} hours`,\n          onClick: () => onEventClick(item)\n        };\n        events.push(event);\n      }\n    });\n  }\n\n  return events;\n};\n\nexport default extractCalendarEvents;","map":{"version":3,"names":["React","moment","extractCalendarEvents","groupedItems","onEventClick","events","groupId","group","items","forEach","item","dateValue","column_values","find","col","title","text","hoursSpentValue","startTime","endTime","event","start","toDate","end","onClick","push"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/CalendarEvents.js"],"sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst extractCalendarEvents = (groupedItems, onEventClick) => {\r\n  const events = [];\r\n\r\n  for (const groupId in groupedItems) {\r\n    const group = groupedItems[groupId];\r\n    group.items.forEach((item) => {\r\n      const dateValue = item.column_values.find((col) => col.title === 'Date').text;\r\n      const hoursSpentValue = item.column_values.find((col) => col.title === 'Hours Spent').text;\r\n      const startTime = item.column_values.find((col) => col.title === 'Start Time').text;\r\n      const endTime = item.column_values.find((col) => col.title === 'End Time').text;\r\n\r\n      if (dateValue && hoursSpentValue && startTime && endTime) {\r\n        const event = {\r\n          start: moment(`${dateValue} ${startTime}`, 'YYYY-MM-DD hh:mm A').toDate(),\r\n          end: moment(`${dateValue} ${endTime}`, 'YYYY-MM-DD hh:mm A').toDate(),\r\n          title: `${hoursSpentValue} hours`,\r\n          onClick: () => onEventClick(item),\r\n        };\r\n        events.push(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  return events;\r\n};\r\n\r\nexport default extractCalendarEvents;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,YAAD,EAAeC,YAAf,KAAgC;EAC5D,MAAMC,MAAM,GAAG,EAAf;;EAEA,KAAK,MAAMC,OAAX,IAAsBH,YAAtB,EAAoC;IAClC,MAAMI,KAAK,GAAGJ,YAAY,CAACG,OAAD,CAA1B;IACAC,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAU;MAC5B,MAAMC,SAAS,GAAGD,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,KAAJ,KAAc,MAA/C,EAAuDC,IAAzE;MACA,MAAMC,eAAe,GAAGP,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,KAAJ,KAAc,aAA/C,EAA8DC,IAAtF;MACA,MAAME,SAAS,GAAGR,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,KAAJ,KAAc,YAA/C,EAA6DC,IAA/E;MACA,MAAMG,OAAO,GAAGT,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,KAAJ,KAAc,UAA/C,EAA2DC,IAA3E;;MAEA,IAAIL,SAAS,IAAIM,eAAb,IAAgCC,SAAhC,IAA6CC,OAAjD,EAA0D;QACxD,MAAMC,KAAK,GAAG;UACZC,KAAK,EAAEpB,MAAM,CAAE,GAAEU,SAAU,IAAGO,SAAU,EAA3B,EAA8B,oBAA9B,CAAN,CAA0DI,MAA1D,EADK;UAEZC,GAAG,EAAEtB,MAAM,CAAE,GAAEU,SAAU,IAAGQ,OAAQ,EAAzB,EAA4B,oBAA5B,CAAN,CAAwDG,MAAxD,EAFO;UAGZP,KAAK,EAAG,GAAEE,eAAgB,QAHd;UAIZO,OAAO,EAAE,MAAMpB,YAAY,CAACM,IAAD;QAJf,CAAd;QAMAL,MAAM,CAACoB,IAAP,CAAYL,KAAZ;MACD;IACF,CAfD;EAgBD;;EAED,OAAOf,MAAP;AACD,CAxBD;;AA0BA,eAAeH,qBAAf"},"metadata":{},"sourceType":"module"}