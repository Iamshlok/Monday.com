{"ast":null,"code":"import moment from'moment';var extractCalendarEvents=function extractCalendarEvents(groupedItems){// Extract events from groupedItems and format them for the calendar\nvar events=[];for(var groupId in groupedItems){var group=groupedItems[groupId];group.items.forEach(function(item){// Extract relevant data and format for events\nvar dateValue=item.column_values.find(function(col){return col.title==='Date';}).text;var hoursSpentValue=item.column_values.find(function(col){return col.title==='Hours Spent';}).text;var startTime=item.column_values.find(function(col){return col.title==='Start Time';}).text;var endTime=item.column_values.find(function(col){return col.title==='End Time';}).text;if(dateValue&&hoursSpentValue&&startTime&&endTime){var event={start:moment(\"\".concat(dateValue,\" \").concat(startTime),'YYYY-MM-DD hh:mm A').toDate(),end:moment(\"\".concat(dateValue,\" \").concat(endTime),'YYYY-MM-DD hh:mm A').toDate(),title:\"\".concat(hoursSpentValue,\" hours\")// Display only the hours spent\n// ... other event properties\n};events.push(event);}});}return events;};export default extractCalendarEvents;","map":{"version":3,"names":["moment","extractCalendarEvents","groupedItems","events","groupId","group","items","forEach","item","dateValue","column_values","find","col","title","text","hoursSpentValue","startTime","endTime","event","start","toDate","end","push"],"sources":["D:/monday.com/Monday.form/quickstart-react/src/CalendarEvents.js"],"sourcesContent":["import moment from 'moment';\r\n\r\nconst extractCalendarEvents = (groupedItems) => {\r\n  // Extract events from groupedItems and format them for the calendar\r\n  const events = [];\r\n\r\n  for (const groupId in groupedItems) {\r\n    const group = groupedItems[groupId];\r\n    group.items.forEach((item) => {\r\n      // Extract relevant data and format for events\r\n      const dateValue = item.column_values.find((col) => col.title === 'Date').text;\r\n      const hoursSpentValue = item.column_values.find((col) => col.title === 'Hours Spent').text;\r\n      const startTime = item.column_values.find((col) => col.title === 'Start Time').text;\r\n      const endTime = item.column_values.find((col) => col.title === 'End Time').text;\r\n\r\n      if (dateValue && hoursSpentValue && startTime && endTime) {\r\n        const event = {\r\n          start: moment(`${dateValue} ${startTime}`, 'YYYY-MM-DD hh:mm A').toDate(),\r\n          end: moment(`${dateValue} ${endTime}`, 'YYYY-MM-DD hh:mm A').toDate(),\r\n          title: `${hoursSpentValue} hours`, // Display only the hours spent\r\n          // ... other event properties\r\n        };\r\n        events.push(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  return events;\r\n};\r\n\r\nexport default extractCalendarEvents;\r\n"],"mappings":"AAAA,MAAOA,OAAP,KAAmB,QAAnB,CAEA,GAAMC,sBAAqB,CAAG,QAAxBA,sBAAwB,CAACC,YAAD,CAAkB,CAC9C;AACA,GAAMC,OAAM,CAAG,EAAf,CAEA,IAAK,GAAMC,QAAX,GAAsBF,aAAtB,CAAoC,CAClC,GAAMG,MAAK,CAAGH,YAAY,CAACE,OAAD,CAA1B,CACAC,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,SAACC,IAAD,CAAU,CAC5B;AACA,GAAMC,UAAS,CAAGD,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwB,SAACC,GAAD,QAASA,IAAG,CAACC,KAAJ,GAAc,MAAvB,EAAxB,EAAuDC,IAAzE,CACA,GAAMC,gBAAe,CAAGP,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwB,SAACC,GAAD,QAASA,IAAG,CAACC,KAAJ,GAAc,aAAvB,EAAxB,EAA8DC,IAAtF,CACA,GAAME,UAAS,CAAGR,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwB,SAACC,GAAD,QAASA,IAAG,CAACC,KAAJ,GAAc,YAAvB,EAAxB,EAA6DC,IAA/E,CACA,GAAMG,QAAO,CAAGT,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwB,SAACC,GAAD,QAASA,IAAG,CAACC,KAAJ,GAAc,UAAvB,EAAxB,EAA2DC,IAA3E,CAEA,GAAIL,SAAS,EAAIM,eAAb,EAAgCC,SAAhC,EAA6CC,OAAjD,CAA0D,CACxD,GAAMC,MAAK,CAAG,CACZC,KAAK,CAAEnB,MAAM,WAAIS,SAAJ,aAAiBO,SAAjB,EAA8B,oBAA9B,CAAN,CAA0DI,MAA1D,EADK,CAEZC,GAAG,CAAErB,MAAM,WAAIS,SAAJ,aAAiBQ,OAAjB,EAA4B,oBAA5B,CAAN,CAAwDG,MAAxD,EAFO,CAGZP,KAAK,WAAKE,eAAL,UAA8B;AACnC;AAJY,CAAd,CAMAZ,MAAM,CAACmB,IAAP,CAAYJ,KAAZ,EACD,CACF,CAhBD,EAiBD,CAED,MAAOf,OAAP,CACD,CA1BD,CA4BA,cAAeF,sBAAf"},"metadata":{},"sourceType":"module"}